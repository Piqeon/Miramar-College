section .text
        global _start

_start:
        mov ecx, count
        xor eax, eax 
        lea ebx, [even_numbers]

generate_even_numbers:
        add eax, 2               ; Move to the next even number (0, 2, 4, 6, 8)
        mov [ebx], eax           ; Add the current even number (in EAX) to EBX
        dec ecx
        add ebx 1
        loop generate_even_numbers  ; Loop until ECX is 0

        lea esi, [even_numbers]    ; Load address of even_numbers array into ESI
        mov ecx, count    

greater_loop:
        mov edx, esi
        cmp edx, esi
        mov ecx, count
        add esi, 1 

        loop greater_loop


segment .bss
        temp resb 1

section .data
        count db 5;
        even_numbers times 5 db 0
